defmodule Gettext.PO.TranslationsTest do
  use ExUnit.Case, async: true

  doctest Gettext.PO.Translations

  alias Gettext.PO.Translation
  alias Gettext.PO.PluralTranslation
  alias Gettext.PO.Translations

  test "autogenerated?/1: singular translations" do
    assert Translations.autogenerated?(%Translation{references: [{"foo.ex", 1}]})
    refute Translations.autogenerated?(%Translation{references: []})
  end

  test "autogenerated?/1: plural translations" do
    assert Translations.autogenerated?(%PluralTranslation{references: [{"foo.ex", 1}]})
    refute Translations.autogenerated?(%PluralTranslation{references: []})
  end

  test "same?/2: singular translations" do
    assert Translations.same?(%Translation{msgid: "foo"}, %Translation{msgid: "foo"})
    refute Translations.same?(%Translation{msgid: "a"}, %Translation{msgid: "b"})
  end

  test "same?/2: plural translations" do
    assert Translations.same?(
      %PluralTranslation{msgid: "foo", msgid_plural: "bar", references: [{"foo.ex", 1}]},
      %PluralTranslation{msgid: "foo", msgid_plural: "bar"}
    )

    refute Translations.same?(
      %PluralTranslation{msgid: "a", msgid_plural: "foo"},
      %PluralTranslation{msgid: "b", msgid_plural: "foo"}
    )

    refute Translations.same?(
      %PluralTranslation{msgid: "foo", msgid_plural: "a"},
      %PluralTranslation{msgid: "foo", msgid_plural: "b"}
    )
  end

  test "same?/2: mixed singular and plural translations (always different)" do
    refute Translations.same?(%Translation{msgid: "a"}, %PluralTranslation{msgid: "a"})
  end

  test "merge/2: leaves identical translations identical" do
    t = %Translation{msgid: "foo", msgstr: "bar"}
    assert Translations.merge(t, t) == t

    t = %PluralTranslation{msgid: "foo", msgid_plural: "bar"}
    assert Translations.merge(t, t) == t
  end

  test "merge/2: translator comments are merged by appending them" do
    t1 = %Translation{msgid: "a", comments: ["# Foo", "# Bar"]}
    t2 = %Translation{msgid: "a", comments: ["# Baz", "# Bong"]}
    assert Translations.merge(t1, t2) == %Translation{msgid: "a", comments: [
      "# Foo", "# Bar", "# Baz", "# Bong"
    ]}
  end

  test "merge/2: references from the old translation are discarded" do
    t1 = %Translation{msgid: "a", references: [{"foo.ex", 1}]}
    t2 = %Translation{msgid: "a", references: [{"bar.ex", 1}]}
    assert Translations.merge(t1, t2) == %Translation{msgid: "a", references: [{"bar.ex", 1}]}
  end
end
